@model cwagnerPortfolio.Models.Blog

@{
    ViewBag.Title = "Create";
}

<div id="blogpost" class="inner-content">

    <section class="inner-section feedback feedback-light" data-section="feedback">

        <div class="container-fluid nopadding">

            <div class="row">

                <div class=""
                     data-animation-origin="top"
                     data-animation-duration="500"
                     data-animation-delay="400"
                     data-animation-distance="25px">
                    <div class="dividewhite2"></div>
                    <h3 class="font-accident-two-normal uppercase text-center">Create blog post</h3>
                    <div class="dividewhite1"></div>
                </div>

                <div class="col-md-2">&nbsp;</div>
                <div class="col-md-8 e-centered"
                     data-animation-origin="top"
                     data-animation-duration="500"
                     data-animation-delay="600"
                     data-animation-distance="25px">
                    <div id="form-messages"></div>
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <hr />
                            <div class="wpcf7-form">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="field">
                                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-offset-0" })
                                    <input type="text" id="Title" name="Title" placeholder="Title" required>
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>

                                <div class="field">
                                    @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-offset-0" })
                                    @Html.EditorFor(model => model.Body, new { id = "createBody", placeholder = "Body", rows = 7, cols = 30 })
                                    @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                                </div>

                                <div class="field">
                                    @Html.LabelFor(model => model.MediaUrl, htmlAttributes: new { @class = "control-label col-md-offset-0" })
                                    <input type="text" id="MediaUrl" name="MediaUrl" placeholder="MediaUrl">
                                    @Html.ValidationMessageFor(model => model.MediaUrl, "", new { @class = "text-danger" })
                                </div>

                                <div class="field">
                                    @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "col-md-offset-0 control-label" })
                                    <div class="pretty o-danger curvy a-tada">
                                        <input id="Published" name="Published" type="checkbox" value="true" @(Model?.Published == true ? "checked=\"checked\"" : "") />
                                        <label><i class="fa fa-check"></i></label>
                                    </div>
                                </div>

                                <div class="dividewhite2"></div>

                                <div class="field text-center">
                                    <button type="submit" class="btn btn-lg btn-darker">Save</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </section>
</div>
@section scripts{
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
    <script type="text/javascript">
            tinymce.init({
                selector: '#Body',
                plugins: "textcolor colorpicker emoticons",
                toolbar: "forecolor backcolor emoticons"
            });
    </script>
}