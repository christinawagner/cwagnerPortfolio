@model cwagnerPortfolio.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
}

<div id="blogpost" class="inner-content">

    <section class="inner-section feedback feedback-light" data-section="feedback">

        <div class="container-fluid nopadding">

            <div class="row">

                <div class=""
                     data-animation-origin="top"
                     data-animation-duration="500"
                     data-animation-delay="400"
                     data-animation-distance="25px">
                    <div class="dividewhite2"></div>
                    <h3 class="font-accident-two-normal uppercase text-center">Reset your password.</h3>
                    <div class="dividewhite1"></div>
                </div>

                <div class="col-md-2">&nbsp;</div>
                <div class="col-md-8 e-centered"
                     data-animation-origin="top"
                     data-animation-duration="500"
                     data-animation-delay="600"
                     data-animation-distance="25px">
                    <div id="form-messages"></div>

                    @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="wpcf7-form">
                            <h4 class="font-accident-two-normal uppercase text-center">For your protection, please reset your password.</h4>
                            <hr />
                            @Html.ValidationSummary("", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Code)
                            <div class="field">
                                @Html.LabelFor(m => m.Email, new { @class = "col-md-offset-0 control-label" })
                                <input type="email" id="Email" name="Email" placeholder="Email" required>
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                            <div class="field">
                                @Html.LabelFor(m => m.Password, new { @class = "col-md-offset-0 control-label" })
                                <input type="password" id="Password" name="Password" placeholder="Password" required>
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>
                            <div class="field">
                                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-offset-0 control-label" })
                                <input type="password" id="ConfirmPassword" name="ConfirmPassword" placeholder="Confirm Password" required>
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                            <div class="dividewhite2"></div>

                            <div class="field text-center">
                                <button type="submit" class="btn btn-lg btn-darker">Reset</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="dividewhite6"></div>
    </section>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
