@model cwagnerPortfolio.Models.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = "Register";
}

<div id="blogpost" class="inner-content">

    <section id="page-title" class="inner-section"
             data-animation-origin="right"
             data-animation-duration="500"
             data-animation-delay="300"
             data-animation-distance="25px">
        <div class="container-fluid nopadding">
        </div>
        <div class="row">
            <div class="col-md-12">
                <section id="loginForm" class="inner-section feedback feedback-light">
                    <div class="col-md-12 e-centered"
                         data-animation-origin="top"
                         data-animation-duration="500"
                         data-animation-delay="600"
                         data-animation-distance="25px">
                        <h3 class="font-accident-two-normal uppercase text-center">@ViewBag.Title</h3>
                        <div id="form-messages"></div>
                        <h4 class="font-accident-two-normal uppercase text-center">Associate your @ViewBag.LoginProvider account.</h4>
                        <hr />
                        <div id="form-messages"></div>
                        @using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="wpcf7-form">
                                <h5 class="font-accident-two-normal uppercase text-center">
                                    You've successfully authenticated with <strong>@ViewBag.LoginProvider</strong>.
                                    Please enter a user name for this site below and click the Register button to finish
                                    logging in.
                                </h5>
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="field">
                                    @Html.LabelFor(m => m.Email, new { @class = "col-md-offset-0 control-label" })
                                    <input type="email" id="Email" name="Email" value="@Model.Email" required>
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                                <div class="dividewhite2"></div>
                                <div class="field text-center">
                                    <button type="submit" class="btn btn-lg btn-darker">Register</button>
                                </div>
                            </div>
                        }
                    </div>
                </section>
            </div>
        </div>
    </section>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
